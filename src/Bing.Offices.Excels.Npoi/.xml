<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bing.Offices.Excels.Npoi</name>
    </assembly>
    <members>
        <member name="T:Bing.Offices.Excels.Npoi.Excel">
            <summary>
            Excel加载操作
            </summary>
        </member>
        <member name="F:Bing.Offices.Excels.Npoi.Excel._formulaEvaluator">
            <summary>
            计算公式
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel.LoadAll``1(System.String,System.Int32)">
            <summary>
            从指定Excel文件加载数据到<see cref="T:System.Collections.Generic.IEnumerable`1"/>集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="excelFile">Excel文件路径</param>
            <param name="startRow">数据读取起始行</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel.LoadAll``1(System.String,Bing.Offices.Excels.Mappings.ExcelSetting,System.Int32)">
            <summary>
            从指定Excel文件加载数据到<see cref="T:System.Collections.Generic.IEnumerable`1"/>集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="excelFile">Excel文件路径</param>
            <param name="excelSetting">用于加载数据的Excel设置</param>
            <param name="startRow">数据读取起始行</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel.LoadAll``1(System.IO.Stream,System.Int32)">
            <summary>
            从指定流加载数据到<see cref="T:System.Collections.Generic.IEnumerable`1"/>集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="excelStream">流</param>
            <param name="startRow">数据读取起始行</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel.LoadAll``1(System.IO.Stream,Bing.Offices.Excels.Mappings.ExcelSetting,System.Int32)">
            <summary>
            从指定流加载数据到<see cref="T:System.Collections.Generic.IEnumerable`1"/>集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="excelStream">流</param>
            <param name="excelSetting">用于加载数据的Excel设置</param>
            <param name="startRow">数据读取起始行</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel.Load``1(System.String,System.Int32,System.Int32)">
            <summary>
            从指定Excel文件加载数据到<see cref="T:System.Collections.Generic.IEnumerable`1"/>集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="excelFile">Excel文件路径</param>
            <param name="startRow">数据读取起始行</param>
            <param name="sheetIndex">工作表索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel.Load``1(System.String,Bing.Offices.Excels.Mappings.ExcelSetting,System.Int32,System.Int32)">
            <summary>
            从指定Excel文件加载数据到<see cref="T:System.Collections.Generic.IEnumerable`1"/>集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="excelFile">Excel文件路径</param>
            <param name="excelSetting">用于加载数据的Excel设置</param>
            <param name="startRow">数据读取起始行</param>
            <param name="sheetIndex">工作表索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel.Load``1(System.String,System.String,System.Int32)">
            <summary>
            从指定Excel文件加载数据到<see cref="T:System.Collections.Generic.IEnumerable`1"/>集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="excelFile">Excel文件路径</param>
            <param name="sheetName">工作表名称</param>
            <param name="startRow">数据读取起始行</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel.Load``1(System.String,Bing.Offices.Excels.Mappings.ExcelSetting,System.String,System.Int32)">
            <summary>
            从指定Excel文件加载数据到<see cref="T:System.Collections.Generic.IEnumerable`1"/>集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="excelFile">Excel文件路径</param>
            <param name="excelSetting">用于加载数据的Excel设置</param>
            <param name="sheetName">工作表名称</param>
            <param name="startRow">数据读取起始行</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel.Load``1(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            从指定流加载数据到<see cref="T:System.Collections.Generic.IEnumerable`1"/>集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="excelStream">流</param>
            <param name="startRow">数据读取起始行</param>
            <param name="sheetIndex">工作表索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel.Load``1(System.IO.Stream,Bing.Offices.Excels.Mappings.ExcelSetting,System.Int32,System.Int32)">
            <summary>
            从指定流加载数据到<see cref="T:System.Collections.Generic.IEnumerable`1"/>集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="excelStream">流</param>
            <param name="excelSetting">用于加载数据的Excel设置</param>
            <param name="startRow">数据读取起始行</param>
            <param name="sheetIndex">工作表索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel.Load``1(System.IO.Stream,System.String,System.Int32)">
            <summary>
            从指定流加载数据到<see cref="T:System.Collections.Generic.IEnumerable`1"/>集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="excelStream">流</param>
            <param name="sheetName">工作表名称</param>
            <param name="startRow">数据读取起始行</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel.Load``1(System.IO.Stream,Bing.Offices.Excels.Mappings.ExcelSetting,System.String,System.Int32)">
            <summary>
            从指定流加载数据到<see cref="T:System.Collections.Generic.IEnumerable`1"/>集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="excelStream">流</param>
            <param name="excelSetting">用于加载数据的Excel设置</param>
            <param name="sheetName">工作表名称</param>
            <param name="startRow">数据读取起始行</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel.Load``1(NPOI.SS.UserModel.ISheet,NPOI.SS.UserModel.IFormulaEvaluator,System.Int32)">
            <summary>
            从指定工作表加载数据到<see cref="T:System.Collections.Generic.IEnumerable`1"/>集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sheet">工作表</param>
            <param name="formulaEvaluator">计算公式</param>
            <param name="startRow">数据读取起始行</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel.Load``1(NPOI.SS.UserModel.ISheet,NPOI.SS.UserModel.IFormulaEvaluator,Bing.Offices.Excels.Mappings.ExcelSetting,System.Int32)">
            <summary>
            从指定工作表加载数据到<see cref="T:System.Collections.Generic.IEnumerable`1"/>集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sheet">工作表</param>
            <param name="formulaEvaluator">计算公式</param>
            <param name="excelSetting">用于加载数据的Excel设置</param>
            <param name="startRow">数据读取起始行</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel.InitializeWorkbook(System.String)">
            <summary>
            初始化工作簿
            </summary>
            <param name="excelFile">Excel文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel.InitializeWorkbook(System.IO.Stream)">
            <summary>
            初始化工作簿
            </summary>
            <param name="excelStream">内存流</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Excel2003">
            <summary>
            Npoi Excel 2003 操作
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel2003.CreateInternalWorkbook">
            <summary>
            创建工作簿
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel2003.CreateInternalWorkbook(System.IO.Stream)">
            <summary>
            创建工作簿
            </summary>
            <param name="stream">文件流，传递过来的创建的工作簿对象</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Excel2007">
            <summary>
            Npoi Excel 2007 操作
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel2007.CreateInternalWorkbook">
            <summary>
            创建工作簿
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Excel2007.CreateInternalWorkbook(System.IO.Stream)">
            <summary>
            创建工作簿
            </summary>
            <param name="stream">文件流，传递过来的创建的工作簿对象</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.ExcelBase">
            <summary>
            Excel 操作基类
            </summary>
        </member>
        <member name="F:Bing.Offices.Excels.Npoi.ExcelBase._workbook">
            <summary>
            工作簿
            </summary>
        </member>
        <member name="F:Bing.Offices.Excels.Npoi.ExcelBase._sheet">
            <summary>
            工作表
            </summary>
        </member>
        <member name="F:Bing.Offices.Excels.Npoi.ExcelBase._row">
            <summary>
            当前单元行
            </summary>
        </member>
        <member name="F:Bing.Offices.Excels.Npoi.ExcelBase._cell">
            <summary>
            当前单元格
            </summary>
        </member>
        <member name="F:Bing.Offices.Excels.Npoi.ExcelBase._dateFormat">
            <summary>
            日期格式
            </summary>
        </member>
        <member name="F:Bing.Offices.Excels.Npoi.ExcelBase._headStyle">
            <summary>
            表头样式
            </summary>
        </member>
        <member name="F:Bing.Offices.Excels.Npoi.ExcelBase._bodyStyle">
            <summary>
            正文样式
            </summary>
        </member>
        <member name="F:Bing.Offices.Excels.Npoi.ExcelBase._footStyle">
            <summary>
            页脚样式
            </summary>
        </member>
        <member name="F:Bing.Offices.Excels.Npoi.ExcelBase._dateStyle">
            <summary>
            日期样式
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.#ctor">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Excels.Npoi.ExcelBase"/>类型的实例
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.CreateWorkbook">
            <summary>
            创建工作簿
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.CreateWorkbook(System.String)">
            <summary>
            创建工作簿
            </summary>
            <param name="filePath">文件路径，绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.CreateWorkbook(System.IO.Stream)">
            <summary>
            创建工作簿
            </summary>
            <param name="stream">文件流，传递过来的创建的工作簿对象</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.CreateInternalWorkbook">
            <summary>
            创建工作簿
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.CreateInternalWorkbook(System.IO.Stream)">
            <summary>
            创建工作簿
            </summary>
            <param name="stream">内存流</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.CreateSheet(System.String)">
            <summary>
            创建工作表
            </summary>
            <param name="sheetName">工作表名称</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.CreateRow(System.Int32)">
            <summary>
            创建行
            </summary>
            <param name="rowIndex">行索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.GetOrCreateRow(System.Int32)">
            <summary>
            获取行，如果不存在则创建
            </summary>
            <param name="rowIndex">行索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.CreateCell(Bing.Offices.Excels.Abstractions.ICell)">
            <summary>
            创建单元格
            </summary>
            <param name="cell">单元格</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.GetOrCreateCell(NPOI.SS.UserModel.IRow,System.Int32)">
            <summary>
            获取单元格，如果不存在则创建
            </summary>
            <param name="row">行</param>
            <param name="columnIndex">单元格索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.SetCellValue(System.Object)">
            <summary>
            设置单元格的值
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.CreateDateStyle">
            <summary>
            创建日期样式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.Write(System.IO.Stream)">
            <summary>
            写入流
            </summary>
            <param name="stream">流</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.DateFormat(System.String)">
            <summary>
            设置日期格式
            </summary>
            <param name="format">日期格式，默认：yyyy-mm-dd</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.MergeCell(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            合并单元格。坐标：(x1,x2,y1,y2)
            </summary>
            <param name="startRowIndex">起始行索引</param>
            <param name="endRowIndex">结束行索引</param>
            <param name="startColumnIndex">开始列索引</param>
            <param name="endColumnIndex">结束列索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.MergeCell(Bing.Offices.Excels.Abstractions.ICell)">
            <summary>
            合并单元格
            </summary>
            <param name="cell">单元格</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.TitleStyle(Bing.Offices.Excels.Abstractions.IWorkSheet,Bing.Offices.Excels.Core.Styles.CellStyle)">
            <summary>
            设置标题样式
            </summary>
            <param name="sheet">工作表</param>
            <param name="style">单元格样式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.HeadStyle(Bing.Offices.Excels.Abstractions.IWorkSheet,Bing.Offices.Excels.Core.Styles.CellStyle)">
            <summary>
            设置表头样式
            </summary>
            <param name="table">工作表</param>
            <param name="style">单元格样式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.Style(System.Int32,System.Int32,System.Int32,System.Int32,NPOI.SS.UserModel.ICellStyle)">
            <summary>
            设置样式
            </summary>
            <param name="startRowIndex">起始行索引</param>
            <param name="endRowIndex">结束行索引</param>
            <param name="startColumnIndex">起始列索引</param>
            <param name="endColumnIndex">结束列索引</param>
            <param name="style">单元格样式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.BodyStyle(Bing.Offices.Excels.Abstractions.IWorkSheet,Bing.Offices.Excels.Core.Styles.CellStyle)">
            <summary>
            设置正文样式
            </summary>
            <param name="table">工作表</param>
            <param name="style">单元格样式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.FootStyle(Bing.Offices.Excels.Abstractions.IWorkSheet,Bing.Offices.Excels.Core.Styles.CellStyle)">
            <summary>
            设置页脚样式
            </summary>
            <param name="table">工作表</param>
            <param name="style">单元格样式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.ColumnWidth(System.Int32,System.Int32)">
            <summary>
            设置单元格列宽
            </summary>
            <param name="columnIndex">列索引</param>
            <param name="width">列宽度，设置字符数</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.AutoColumnWidth(System.Int32)">
            <summary>
            设置单元格自动列宽
            </summary>
            <param name="columnIndex">列索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.AutoColumnWidth">
            <summary>
            设置单元格自动列宽
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.RowHeight(System.Int32,System.Int32)">
            <summary>
            设置单元行行高
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="height">行高度</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.AutoRowHeight(System.Int32)">
            <summary>
            设置单元行自动行高
            </summary>
            <param name="rowIndex">行索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.AutoRowHeight">
            <summary>
            设置单元行自动行高
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.GetWorkbook(System.IO.Stream)">
            <summary>
            获取工作簿
            </summary>
            <param name="stream">流</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.ExcelBase.GetWorkbook(System.String)">
            <summary>
            获取工作簿
            </summary>
            <param name="fileName">文件名称，绝对路径</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Exports.Excel2003Export">
            <summary>
            Npoi Excel 2003 导出操作
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Exports.Excel2003Export.#ctor">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Excels.Npoi.Exports.Excel2003Export"/>类型的实例
            </summary>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Exports.Excel2007Export">
            <summary>
            Npoi Excel 2007 导出操作
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Exports.Excel2007Export.#ctor">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Excels.Npoi.Exports.Excel2007Export"/>类型的实例
            </summary>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Exports.ExportFactory">
            <summary>
            导出器工厂
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Exports.ExportFactory.Create(Bing.Offices.Excels.ExcelVersion)">
            <summary>
            创建导出器
            </summary>
            <param name="version">Excel版本</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Exports.ExportFactory.CreateExcel2003Export">
            <summary>
            创建 Excel 2003 导出器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Exports.ExportFactory.CreateExcel2007Export">
            <summary>
            创建 Excel 2007 导出器
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Extensions.CellExtensions">
            <summary>
            单元格(<see cref="T:NPOI.SS.UserModel.ICell"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellExtensions.GetCellValue(NPOI.SS.UserModel.ICell,NPOI.SS.UserModel.IFormulaEvaluator)">
            <summary>
            获取单元格的值
            </summary>
            <param name="cell">单元格</param>
            <param name="eval">计算公式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellExtensions.SetValue(NPOI.SS.UserModel.ICell,System.Object)">
            <summary>
            设置单元格值
            </summary>
            <param name="cell">单元格</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellExtensions.AddConditionalFormattingRules(NPOI.SS.UserModel.ICell,NPOI.SS.UserModel.IConditionalFormattingRule[])">
            <summary>
            添加条件格式规则
            </summary>
            <param name="cell">单元格</param>
            <param name="cfrs">条件格式规则</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellExtensions.GetConditionalFormattingRules(NPOI.SS.UserModel.ICell)">
            <summary>
            获取条件格式规则
            </summary>
            <param name="cell">单元格</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellExtensions.ExistConditionalFormatting(NPOI.SS.UserModel.ICell,NPOI.SS.UserModel.IConditionalFormatting)">
            <summary>
            判断单元格是否存在条件格式
            </summary>
            <param name="cell">单元格</param>
            <param name="cf">条件格式</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions">
            <summary>
            单元格样式(<see cref="T:NPOI.SS.UserModel.ICellStyle"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions.SetDataFormat(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置数据格式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="dataFormat">数据格式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions.SetHorizontalAlignment(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.HorizontalAlignment)">
            <summary>
            设置水平对齐
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="horizontalAlignment">水平对齐</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions.SetVerticalAlignment(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.VerticalAlignment)">
            <summary>
            设置垂直对齐
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="verticalAlignment">垂直对齐</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions.SetFillForegroundColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置填充前景颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="fillForegroundColor">填充前景颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions.SetFillBackgroundColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置填充背景颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="backgroundColor">填充背景颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions.SetFillPattern(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.FillPattern)">
            <summary>
            设置填充模式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="fillPattern">填充图案</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions.SetBorderTop(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.BorderStyle)">
            <summary>
            设置上边框样式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderStyle">边框样式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions.SetBorderRight(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.BorderStyle)">
            <summary>
            设置右边框样式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderStyle">边框样式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions.SetBorderBottom(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.BorderStyle)">
            <summary>
            设置下边框样式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderStyle">边框样式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions.SetBorderLeft(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.BorderStyle)">
            <summary>
            设置左边框样式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderStyle">边框样式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions.SetBorder(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.BorderStyle)">
            <summary>
            设置边框样式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderStyle">边框样式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions.SetBorderTopColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置上边框颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderColor">边框颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions.SetBorderRightColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置右边框颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderColor">边框颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions.SetBorderBottomColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置下边框颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderColor">边框颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions.SetBorderLeftColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置左边框颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderColor">边框颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions.SetBorderColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置边框颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderColor">边框颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.CellStyleExtensions.SetFont(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.IWorkbook,System.Action{NPOI.SS.UserModel.IFont})">
            <summary>
            设置字体
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="workbook">工作簿</param>
            <param name="action">字体</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Extensions.EnumerableExtensions">
            <summary>
            集合(<see cref="T:System.Collections.Generic.IEnumerable`1"/>) 扩展
            </summary>
        </member>
        <member name="F:Bing.Offices.Excels.Npoi.Extensions.EnumerableExtensions._formulaEvaluator">
            <summary>
            计算公式
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.EnumerableExtensions.InitializeWorkbook(System.String,Bing.Offices.Excels.Mappings.ExcelSetting)">
            <summary>
            初始化工作簿
            </summary>
            <param name="excelFile">Excel文件路径</param>
            <param name="excelSetting">用于加载数据的Excel设置</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.EnumerableExtensions.GetCellPosition(System.Int32,System.Int32)">
            <summary>
            获取单元格位置
            </summary>
            <param name="row">行索引</param>
            <param name="col">列索引</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Extensions.FontExtensions">
            <summary>
            字体(<see cref="T:NPOI.SS.UserModel.IFont"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.FontExtensions.SetFontHeightInPoints(NPOI.SS.UserModel.IFont,System.Int16)">
            <summary>
            设置字体大小
            </summary>
            <param name="font">字体</param>
            <param name="fontSize">字体大小</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.FontExtensions.SetColor(NPOI.SS.UserModel.IFont,System.Int16)">
            <summary>
            设置字体颜色
            </summary>
            <param name="font">字体</param>
            <param name="color">颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.FontExtensions.SetBoldweight(NPOI.SS.UserModel.IFont,System.Int16)">
            <summary>
            设置粗体
            </summary>
            <param name="font">字体</param>
            <param name="boldweight">粗体大小</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Extensions.RowExtensions">
            <summary>
            行(<see cref="T:NPOI.SS.UserModel.IRow"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.RowExtensions.GetOrCreateCell(NPOI.SS.UserModel.IRow,System.Int32)">
            <summary>
            获取或创建单元格
            </summary>
            <param name="row">行</param>
            <param name="cellIndex">单元格索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.RowExtensions.CreateCell(NPOI.SS.UserModel.IRow,System.Int32,System.Action{NPOI.SS.UserModel.ICell})">
            <summary>
            创建单元格并进行操作
            </summary>
            <param name="row">行</param>
            <param name="cellIndex">单元格索引</param>
            <param name="action">单元格操作</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.RowExtensions.ClearContent(NPOI.SS.UserModel.IRow)">
            <summary>
            清空内容
            </summary>
            <param name="row">行</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.RowExtensions.GetCellValue(NPOI.SS.UserModel.IRow,System.Int32,NPOI.SS.UserModel.IFormulaEvaluator)">
            <summary>
            获取单元格的值
            </summary>
            <param name="row">行</param>
            <param name="index">单元格索引</param>
            <param name="eval">计算公式</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions">
            <summary>
            工作表(<see cref="T:NPOI.SS.UserModel.ISheet"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.GetCellValue(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            获取单元格的值
            </summary>
            <param name="sheet">工作表</param>
            <param name="rowIndex">行索引</param>
            <param name="columnIndex">列索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.GetMergedRegionValue(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            获取合并单元格的值
            </summary>
            <param name="sheet">工作表</param>
            <param name="rowIndex">行索引</param>
            <param name="columnIndex">列索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.IsMergedRegion(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            判断指定的单元格是否是合并单元格
            </summary>
            <param name="sheet">工作表</param>
            <param name="rowIndex">行索引</param>
            <param name="columnIndex">列索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.DeleteColumn(NPOI.SS.UserModel.ISheet,System.Int32)">
            <summary>
            删除工作表中指定列，并移动右侧列到左侧列
            </summary>
            <param name="sheet">工作表</param>
            <param name="columnIndex">列索引</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.CloneCell(NPOI.SS.UserModel.ICell,NPOI.SS.UserModel.ICell)">
            <summary>
            克隆单元格
            </summary>
            <param name="oldCell">旧单元格</param>
            <param name="newCell">新单元格</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.MergedCell(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            合并单元格
            </summary>
            <param name="sheet">工作表</param>
            <param name="firstRow">起始行索引</param>
            <param name="lastRow">结束行索引</param>
            <param name="firstColumn">起始列索引</param>
            <param name="lastColumn">结束列索引</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.GetOrCreateRow(NPOI.SS.UserModel.ISheet,System.Int32)">
            <summary>
            获取或创建行
            </summary>
            <param name="sheet">工作表</param>
            <param name="rowIndex">行索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.CreateRow(NPOI.SS.UserModel.ISheet,System.Int32,System.Action{NPOI.SS.UserModel.IRow})">
            <summary>
            创建行并进行操作
            </summary>
            <param name="sheet">工作表</param>
            <param name="rowIndex">行索引</param>
            <param name="action">行操作</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.InsertRow(NPOI.SS.UserModel.ISheet,System.Int32)">
            <summary>
            插入行
            </summary>
            <param name="sheet">工作表</param>
            <param name="rowIndex">行索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.InsertRows(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            插入行
            </summary>
            <param name="sheet">工作表</param>
            <param name="rowIndex">行索引</param>
            <param name="rowsCount">行数</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.MoveMergedRegions(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            移动所有合并区域
            </summary>
            <param name="sheet">工作表</param>
            <param name="moveRowCount">移动总行数</param>
            <param name="moveColumnCount">移动总列数</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.MoveMergedRegions(NPOI.SS.UserModel.ISheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            移动指定区域内的合并区域
            </summary>
            <param name="sheet">工作表</param>
            <param name="firstRow">起始行</param>
            <param name="lastRow">结束行</param>
            <param name="firstColumn">起始列</param>
            <param name="lastColumn">结束列</param>
            <param name="moveRowCount">移动总行数</param>
            <param name="moveColumnCount">移动总列数</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.RemovePictures(NPOI.SS.UserModel.ISheet)">
            <summary>
            删除所有图片
            </summary>
            <param name="sheet">工作表</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.RemovePictures(NPOI.SS.UserModel.ISheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            删除指定区域的图片
            </summary>
            <param name="sheet">工作表</param>
            <param name="firstRow">起始行索引</param>
            <param name="lastRow">结束行索引</param>
            <param name="firstColumn">起始列索引</param>
            <param name="lastColumn">结束列索引</param>
            <param name="onlyInternal">是否内部区域</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.RemovePictures(NPOI.HSSF.UserModel.HSSFSheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            删除指定区域的图片
            </summary>
            <param name="sheet">工作表</param>
            <param name="firstRow">起始行索引</param>
            <param name="lastRow">结束行索引</param>
            <param name="firstColumn">起始列索引</param>
            <param name="lastColumn">结束列索引</param>
            <param name="onlyInternal">是否内部区域</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.RemovePictures(NPOI.XSSF.UserModel.XSSFSheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            删除指定区域的图片
            </summary>
            <param name="sheet">工作表</param>
            <param name="firstRow">起始行索引</param>
            <param name="lastRow">结束行索引</param>
            <param name="firstColumn">起始列索引</param>
            <param name="lastColumn">结束列索引</param>
            <param name="onlyInternal">是否内部区域</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.MovePictures(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            移动所有图片
            </summary>
            <param name="sheet">工作表</param>
            <param name="moveRowCount">移动行总数</param>
            <param name="moveColumnCount">移动列总数</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.MovePictures(NPOI.SS.UserModel.ISheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Int32,System.Int32)">
            <summary>
            移动指定区域的所有图片
            </summary>
            <param name="sheet">工作表</param>
            <param name="firstRow">起始行索引</param>
            <param name="lastRow">结束行索引</param>
            <param name="firstColumn">起始列索引</param>
            <param name="lastColumn">结束列索引</param>
            <param name="onlyInternal">是否内部区域</param>
            <param name="moveRowCount">移动行总数</param>
            <param name="moveColumnCount">移动列总数</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.SheetExtensions.IsInternalOrIntersect(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            判断区域内部或交叉
            </summary>
            <param name="rangeFirstRow">区域起始行</param>
            <param name="rangeLastRow">区域结束行</param>
            <param name="rangeFirstColumn">区域起始列</param>
            <param name="rangeLastColumn">区域结束列</param>
            <param name="pictureFirstRow">图片起始行</param>
            <param name="pictureLastRow">图片结束行</param>
            <param name="pictureFirstColumn">图片起始列</param>
            <param name="pictureLastColumn">图片结束列</param>
            <param name="onlyInternal">是否内部区域</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Extensions.TypeExtensions">
            <summary>
            类型扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.TypeExtensions.UnwrapNullableType(System.Type)">
            <summary>
            展开<see cref="T:System.Nullable"/>类型，如果<paramref name="type"/>为可空类型或者类型为self，则获取可空类型
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Extensions.WorkbookExtensions">
            <summary>
            工作簿<see cref="T:NPOI.SS.UserModel.IWorkbook"/> 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.WorkbookExtensions.GetExcelFormat(NPOI.SS.UserModel.IWorkbook)">
            <summary>
            获取Excel格式类型
            </summary>
            <param name="workbook">工作簿</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.WorkbookExtensions.GetSheets(NPOI.SS.UserModel.IWorkbook)">
            <summary>
            获取工作表集合
            </summary>
            <param name="workbook">工作簿</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.WorkbookExtensions.GetOrCreateSheet(NPOI.SS.UserModel.IWorkbook,System.String)">
            <summary>
            获取或创建工作表
            </summary>
            <param name="workbook">工作簿</param>
            <param name="name">工作表名</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.WorkbookExtensions.CreateSheet(NPOI.SS.UserModel.IWorkbook,System.String,System.Action{NPOI.SS.UserModel.ISheet})">
            <summary>
            创建工作表并进行操作
            </summary>
            <param name="workbook">工作簿</param>
            <param name="name">工作表名</param>
            <param name="action">工作表操作</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.WorkbookExtensions.GetOrCreateSheet(NPOI.SS.UserModel.IWorkbook)">
            <summary>
            获取或创建工作表
            </summary>
            <param name="workbook">工作簿</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.WorkbookExtensions.CreateSheet(NPOI.SS.UserModel.IWorkbook,System.Action{NPOI.SS.UserModel.ISheet})">
            <summary>
            创建工作表并进行操作
            </summary>
            <param name="workbook">工作簿</param>
            <param name="action">工作表操作</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Extensions.WorkbookExtensions.SaveToBuffer(NPOI.SS.UserModel.IWorkbook)">
            <summary>
            将工作簿转换成二进制文件流
            </summary>
            <param name="workbook">工作簿</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Imports.Excel2003Import">
            <summary>
            Npoi Excel 2003 导入器
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Imports.Excel2003Import.#ctor(System.String,System.String)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Excels.Npoi.Imports.Excel2003Import"/>类型的实例
            </summary>
            <param name="path">文件路径，绝对路径</param>
            <param name="sheetName">工作表名称</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Imports.Excel2003Import.GetResult``1(System.IO.Stream)">
            <summary>
            获取结果
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="stream">文件流</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Imports.Excel2007Import">
            <summary>
            Npoi Excel 2007 导入器
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Imports.Excel2007Import.#ctor(System.String,System.String)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Excels.Npoi.Imports.Excel2007Import"/>类型的实例
            </summary>
            <param name="path">文件路径，绝对路径</param>
            <param name="sheetName">工作表名称</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Imports.Excel2007Import.GetResult``1(System.IO.Stream)">
            <summary>
            获取结果
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="stream">文件流</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Imports.ImportFactory">
            <summary>
            导入器工厂
            </summary>
        </member>
        <member name="F:Bing.Offices.Excels.Npoi.Imports.ImportFactory._path">
            <summary>
            文件绝对路径
            </summary>
        </member>
        <member name="F:Bing.Offices.Excels.Npoi.Imports.ImportFactory._sheetName">
            <summary>
            工作表名称
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Imports.ImportFactory.#ctor(System.String,System.String)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Excels.Npoi.Imports.ImportFactory"/>类型的实例
            </summary>
            <param name="path">导入文件路径，绝对路径</param>
            <param name="sheetName">工作表名称</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Imports.ImportFactory.Create(Bing.Offices.Excels.ExcelVersion)">
            <summary>
            创建导入器
            </summary>
            <param name="version">Excel格式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Imports.ImportFactory.CreateExcel2003Import(System.String,System.String)">
            <summary>
            创建 Excel 2003 导入器
            </summary>
            <param name="path">导入文件路径，绝对路径</param>
            <param name="sheetName">工作表名称</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Imports.ImportFactory.CreateExcel2007Import(System.String,System.String)">
            <summary>
            创建 Excel 2007 导入器
            </summary>
            <param name="path">导入文件路径，绝对路径</param>
            <param name="sheetName">工作表名称</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Resolvers.CellStyleResolver">
            <summary>
            单元格样式解析器
            </summary>
        </member>
        <member name="F:Bing.Offices.Excels.Npoi.Resolvers.CellStyleResolver._workbook">
            <summary>
            工作簿
            </summary>
        </member>
        <member name="F:Bing.Offices.Excels.Npoi.Resolvers.CellStyleResolver._style">
            <summary>
            单元格样式
            </summary>
        </member>
        <member name="F:Bing.Offices.Excels.Npoi.Resolvers.CellStyleResolver._result">
            <summary>
            Npoi单元格样式
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Resolvers.CellStyleResolver.#ctor(NPOI.SS.UserModel.IWorkbook,Bing.Offices.Excels.Core.Styles.CellStyle)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Excels.Npoi.Resolvers.CellStyleResolver"/>类型的实例
            </summary>
            <param name="workbook">工作簿</param>
            <param name="cellStyle">单元格样式</param>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Resolvers.CellStyleResolver.Resolve">
            <summary>
            解析为Npoi单元格样式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Resolvers.CellStyleResolver.Resolve(NPOI.SS.UserModel.IWorkbook,Bing.Offices.Excels.Core.Styles.CellStyle)">
            <summary>
            解析单元格样式
            </summary>
            <param name="workbook">工作簿</param>
            <param name="style">单元格样式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Resolvers.CellStyleResolver.GetHorizontalAlignment">
            <summary>
            获取水平对齐
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Resolvers.CellStyleResolver.GetVerticalAlignment">
            <summary>
            获取垂直对齐
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Resolvers.CellStyleResolver.SetBackgroundColor">
            <summary>
            设置背景色
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Resolvers.CellStyleResolver.SetForegroundColor">
            <summary>
            设置前景色
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Resolvers.CellStyleResolver.SetFillPattern">
            <summary>
            设置填充模式
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Resolvers.CellStyleResolver.ConvertFillPattern(Bing.Offices.Excels.Core.Styles.FillPattern)">
            <summary>
            转换填充模式
            </summary>
            <param name="fillPattern">填充模式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Resolvers.CellStyleResolver.SetBorderColor">
            <summary>
            设置边框颜色
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Resolvers.CellStyleResolver.SetFont">
            <summary>
            设置字体
            </summary>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Resolvers.CellValueTypeResolver">
            <summary>
            单元格类型解析器
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Resolvers.CellValueTypeResolver.Resolve(Bing.Offices.Excels.Core.Styles.CellValueType)">
            <summary>
            解析单元格值类型
            </summary>
            <param name="cellValueType">单元格值类型</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Excels.Npoi.Resolvers.ColorResolver">
            <summary>
            颜色解析器
            </summary>
        </member>
        <member name="M:Bing.Offices.Excels.Npoi.Resolvers.ColorResolver.Resolve(Bing.Offices.Excels.Core.Styles.Color)">
            <summary>
            转换
            </summary>
            <param name="color">颜色枚举</param>
            <returns></returns>
        </member>
    </members>
</doc>
