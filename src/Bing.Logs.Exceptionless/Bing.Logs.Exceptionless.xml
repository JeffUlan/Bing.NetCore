<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bing.Logs.Exceptionless</name>
    </assembly>
    <members>
        <member name="T:Bing.Logs.Exceptionless.ExceptionlessProvider">
            <summary>
            Exceptionless日志提供程序
            </summary>
        </member>
        <member name="F:Bing.Logs.Exceptionless.ExceptionlessProvider._client">
            <summary>
            客户端
            </summary>
        </member>
        <member name="F:Bing.Logs.Exceptionless.ExceptionlessProvider._line">
            <summary>
            行号
            </summary>
        </member>
        <member name="P:Bing.Logs.Exceptionless.ExceptionlessProvider.LogName">
            <summary>
            日志名称
            </summary>
        </member>
        <member name="P:Bing.Logs.Exceptionless.ExceptionlessProvider.IsDebugEnabled">
            <summary>
            调试级别是否启用
            </summary>
        </member>
        <member name="P:Bing.Logs.Exceptionless.ExceptionlessProvider.IsTraceEnabled">
            <summary>
            跟踪级别是否启用
            </summary>
        </member>
        <member name="P:Bing.Logs.Exceptionless.ExceptionlessProvider.IsDistributedLog">
            <summary>
            是否分布式日志
            </summary>
        </member>
        <member name="M:Bing.Logs.Exceptionless.ExceptionlessProvider.#ctor(System.String)">
            <summary>
            初始化一个<see cref="T:Bing.Logs.Exceptionless.ExceptionlessProvider"/>类型的实例
            </summary>
            <param name="logName">日志名称</param>
        </member>
        <member name="M:Bing.Logs.Exceptionless.ExceptionlessProvider.WriteLog(Bing.Logs.LogLevel,Bing.Logs.Abstractions.ILogContent)">
            <summary>
            写日志
            </summary>
            <param name="level">平台日志等级</param>
            <param name="content">日志内容</param>
        </member>
        <member name="M:Bing.Logs.Exceptionless.ExceptionlessProvider.InitLine">
            <summary>
            初始化行号
            </summary>
        </member>
        <member name="M:Bing.Logs.Exceptionless.ExceptionlessProvider.CreateBuilder(Bing.Logs.LogLevel,Bing.Logs.Abstractions.ILogContent)">
            <summary>
            创建事件生成器
            </summary>
            <param name="level">平台日志等级</param>
            <param name="content">日志内容</param>
        </member>
        <member name="M:Bing.Logs.Exceptionless.ExceptionlessProvider.GetMessage(Bing.Logs.Abstractions.ILogContent)">
            <summary>
            获取日志消息
            </summary>
            <param name="content">日志内容</param>
        </member>
        <member name="M:Bing.Logs.Exceptionless.ExceptionlessProvider.ConvertTo(Bing.Logs.LogLevel)">
            <summary>
            转换日志等级
            </summary>
            <param name="level">平台日志等级</param>
        </member>
        <member name="M:Bing.Logs.Exceptionless.ExceptionlessProvider.SetUser(Bing.Logs.Abstractions.ILogContent)">
            <summary>
            设置用户信息
            </summary>
            <param name="content">日志内容</param>
        </member>
        <member name="M:Bing.Logs.Exceptionless.ExceptionlessProvider.SetSource(Exceptionless.EventBuilder,Bing.Logs.Abstractions.ILogContent)">
            <summary>
            设置来源
            </summary>
            <param name="builder">事件生成器</param>
            <param name="content">日志内容</param>
        </member>
        <member name="M:Bing.Logs.Exceptionless.ExceptionlessProvider.SetReferenceId(Exceptionless.EventBuilder,Bing.Logs.Abstractions.ILogContent)">
            <summary>
            设置跟踪号
            </summary>
            <param name="builder">事件生成器</param>
            <param name="content">日志内容</param>
        </member>
        <member name="M:Bing.Logs.Exceptionless.ExceptionlessProvider.AddProperties(Exceptionless.EventBuilder,Bing.Logs.Abstractions.ILogConvert)">
            <summary>
            添加属性集合
            </summary>
            <param name="builder">事件生成器</param>
            <param name="content">日志转换器</param>
        </member>
        <member name="M:Bing.Logs.Exceptionless.ExceptionlessProvider.AddTags(Exceptionless.EventBuilder,Bing.Logs.Abstractions.ILogContent)">
            <summary>
            添加标签
            </summary>
            <param name="builder">事件生成器</param>
            <param name="content">日志内容</param>
        </member>
        <member name="M:Bing.Logs.Exceptionless.ExceptionlessProvider.GetLine">
            <summary>
            获取行号
            </summary>
        </member>
        <member name="T:Bing.Logs.Exceptionless.Extensions">
            <summary>
            日志扩展
            </summary>
        </member>
        <member name="M:Bing.Logs.Exceptionless.Extensions.AddExceptionless(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Exceptionless.ExceptionlessConfiguration},System.String)">
            <summary>
            注册Exceptionless日志操作
            </summary>
            <param name="services">服务集合</param>
            <param name="configAction">配置操作</param>
            <param name="name">服务名称</param>
        </member>
        <member name="M:Bing.Logs.Exceptionless.Extensions.AddExceptionlessWithFactory(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Exceptionless.ExceptionlessConfiguration},System.String)">
            <summary>
            注册Exceptionless日志操作。使用日志工厂，实现混合日志
            </summary>
            <param name="services">服务集合</param>
            <param name="configAction">配置操作</param>
            <param name="name">名称</param>
        </member>
        <member name="T:Bing.Logs.Exceptionless.LogContext">
            <summary>
            Exceptionless日志上下文
            </summary>
        </member>
        <member name="M:Bing.Logs.Exceptionless.LogContext.CreateInfo">
            <summary>
            创建日志上下文信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bing.Logs.Exceptionless.LogProviderFactory">
            <summary>
            Exceptionless日志提供程序工厂
            </summary>
        </member>
        <member name="M:Bing.Logs.Exceptionless.LogProviderFactory.Create(System.String,Bing.Logs.Abstractions.ILogFormat)">
            <summary>
            创建日志提供程序
            </summary>
            <param name="logName">日志名称</param>
            <param name="format">日志格式化器</param>
        </member>
    </members>
</doc>
