<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bing.Ui.Angular</name>
    </assembly>
    <members>
        <member name="T:Bing.Ui.Angular.AngularConst">
            <summary>
            Angular 常量
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.NgIf">
            <summary>
            ngIf指令
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.NgFor">
            <summary>
            ngFor指令
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.NgClass">
            <summary>
            ngClass指令
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.NgModel">
            <summary>
            ngModel指令
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.BindLink">
            <summary>
            路由链接属性绑定
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.BindName">
            <summary>
            名称属性绑定
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.BindText">
            <summary>
            文本属性绑定
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.BindValue">
            <summary>
            值属性绑定
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.BindPlaceholder">
            <summary>
            提示绑定
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.BindLabel">
            <summary>
            标签绑定
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.BindActive">
            <summary>
            激活绑定
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.BindFontAwesomeIcon">
            <summary>
            FontAwesome图标绑定
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.BindMaterialIcon">
            <summary>
            Material图标绑定
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.BindBaseUrl">
            <summary>
            基Url绑定
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.BindUrl">
            <summary>
            Url绑定
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.BindDeleteUrl">
            <summary>
            删除Url绑定
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.BindType">
            <summary>
            类型绑定
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.BindTheme">
            <summary>
            主题绑定
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.AngularConst.BindDisabled">
            <summary>
            禁用绑定
            </summary>
        </member>
        <member name="T:Bing.Ui.Angular.Base.AngularRenderBase">
            <summary>
            Angular 渲染器基类
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Base.AngularRenderBase._config">
            <summary>
            配置
            </summary>
        </member>
        <member name="M:Bing.Ui.Angular.Base.AngularRenderBase.#ctor(Bing.Ui.Configs.IConfig)">
            <summary>
            初始化一个<see cref="T:Bing.Ui.Angular.Base.AngularRenderBase"/>类型的实例
            </summary>
            <param name="config">配置</param>
        </member>
        <member name="M:Bing.Ui.Angular.Base.AngularRenderBase.InitBuilder(Bing.Ui.Builders.TagBuilder)">
            <summary>
            初始化生成器
            </summary>
            <param name="builder">标签生成器</param>
        </member>
        <member name="M:Bing.Ui.Angular.Base.AngularRenderBase.ConfigId(Bing.Ui.Builders.TagBuilder)">
            <summary>
            配置标识
            </summary>
            <param name="builder">标签生成器</param>
        </member>
        <member name="T:Bing.Ui.Angular.Base.AngularTagHelperBase">
            <summary>
            Angular TagHelper基类
            </summary>
        </member>
        <member name="P:Bing.Ui.Angular.Base.AngularTagHelperBase.NgIf">
            <summary>
            *ngIf
            </summary>
        </member>
        <member name="P:Bing.Ui.Angular.Base.AngularTagHelperBase.NgFor">
            <summary>
            *ngFor。范例： let item of items
            </summary>
        </member>
        <member name="P:Bing.Ui.Angular.Base.AngularTagHelperBase.NgClass">
            <summary>
            ngClass指令
            </summary>
        </member>
        <member name="T:Bing.Ui.Angular.Builders.TemplateBuilder">
            <summary>
            ng-template 模板生成器
            </summary>
        </member>
        <member name="M:Bing.Ui.Angular.Builders.TemplateBuilder.#ctor">
            <summary>
            初始化一个<see cref="T:Bing.Ui.Angular.Builders.TemplateBuilder"/>类型的实例
            </summary>
        </member>
        <member name="T:Bing.Ui.Angular.Enums.SortDirection">
            <summary>
            排序方向
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Enums.SortDirection.Asc">
            <summary>
            升序
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Enums.SortDirection.Desc">
            <summary>
            降序
            </summary>
        </member>
        <member name="T:Bing.Ui.Angular.Enums.TableColumnType">
            <summary>
            表格列类型
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Enums.TableColumnType.LineNumber">
            <summary>
            序号
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Enums.TableColumnType.Checkbox">
            <summary>
            复选框
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Enums.TableColumnType.Radio">
            <summary>
            单选框
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Enums.TableColumnType.Bool">
            <summary>
            布尔
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Enums.TableColumnType.Date">
            <summary>
            日期
            </summary>
        </member>
        <member name="T:Bing.Ui.Angular.Forms.Configs.SelectConfig">
            <summary>
            下拉列表配置
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Forms.Configs.SelectConfig.Items">
            <summary>
            列表项集合
            </summary>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Configs.SelectConfig.#ctor">
            <summary>
            初始化一个<see cref="T:Bing.Ui.Angular.Forms.Configs.SelectConfig"/>类型的实例
            </summary>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Configs.SelectConfig.#ctor(Bing.Ui.TagHelpers.Context)">
            <summary>
            初始化一个<see cref="T:Bing.Ui.Angular.Forms.Configs.SelectConfig"/>类型的实例
            </summary>
            <param name="context">TagHelper上下文</param>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Configs.SelectConfig.AddItems(Bing.Utils.Item[])">
            <summary>
            添加项集合
            </summary>
            <param name="items">列表项集合</param>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Configs.SelectConfig.AddBool">
            <summary>
            添加布尔
            </summary>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Configs.SelectConfig.AddEnum(System.Type)">
            <summary>
            添加枚举
            </summary>
            <param name="type">枚举类型</param>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Configs.SelectConfig.GetValidateMessage">
            <summary>
            获取验证消息
            </summary>
        </member>
        <member name="T:Bing.Ui.Angular.Forms.Configs.TextBoxConfig">
            <summary>
            文本框配置
            </summary>
        </member>
        <member name="P:Bing.Ui.Angular.Forms.Configs.TextBoxConfig.IsTextArea">
            <summary>
            是否多行文本框
            </summary>
        </member>
        <member name="P:Bing.Ui.Angular.Forms.Configs.TextBoxConfig.IsDatePicker">
            <summary>
            是否日期选择框
            </summary>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Configs.TextBoxConfig.#ctor">
            <summary>
            初始化一个<see cref="T:Bing.Ui.Angular.Forms.Configs.TextBoxConfig"/>类型的实例
            </summary>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Configs.TextBoxConfig.#ctor(Bing.Ui.TagHelpers.Context)">
            <summary>
            初始化一个<see cref="T:Bing.Ui.Angular.Forms.Configs.TextBoxConfig"/>类型的实例
            </summary>
            <param name="context">TagHelper上下文</param>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Configs.TextBoxConfig.Number">
            <summary>
            设置为数值类型
            </summary>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Configs.TextBoxConfig.Password">
            <summary>
            设置为密码类型
            </summary>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Configs.TextBoxConfig.Email">
            <summary>
            设置为Email类型
            </summary>
        </member>
        <member name="T:Bing.Ui.Angular.Forms.Resolvers.ExpressionResolver">
            <summary>
            表达式解析器
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Forms.Resolvers.ExpressionResolver._expression">
            <summary>
            属性表达式
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Forms.Resolvers.ExpressionResolver._config">
            <summary>
            配置
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Forms.Resolvers.ExpressionResolver._memberInfo">
            <summary>
            成员
            </summary>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Resolvers.ExpressionResolver.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression,Bing.Ui.Configs.IConfig)">
            <summary>
            初始化一个<see cref="T:Bing.Ui.Angular.Forms.Resolvers.ExpressionResolver"/>类型的实例
            </summary>
            <param name="expression">属性表达式</param>
            <param name="config">配置</param>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Resolvers.ExpressionResolver.Init(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression,Bing.Ui.Configs.IConfig)">
            <summary>
            初始化
            </summary>
            <param name="expression">属性表达式</param>
            <param name="config">配置</param>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Resolvers.ExpressionResolver.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:Bing.Ui.Angular.Forms.Resolvers.SelectExpressionResolver">
            <summary>
            下拉列表表达式解析器
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Forms.Resolvers.SelectExpressionResolver._expression">
            <summary>
            属性表达式
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Forms.Resolvers.SelectExpressionResolver._config">
            <summary>
            配置
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Forms.Resolvers.SelectExpressionResolver._memberInfo">
            <summary>
            成员
            </summary>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Resolvers.SelectExpressionResolver.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression,Bing.Ui.Angular.Forms.Configs.SelectConfig)">
            <summary>
            初始化一个<see cref="T:Bing.Ui.Angular.Forms.Resolvers.SelectExpressionResolver"/>类型的实例
            </summary>
            <param name="expression">属性表达式</param>
            <param name="config">配置</param>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Resolvers.SelectExpressionResolver.Init(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression,Bing.Ui.Angular.Forms.Configs.SelectConfig)">
            <summary>
            初始化
            </summary>
            <param name="expression">属性表达式</param>
            <param name="config">配置</param>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Resolvers.SelectExpressionResolver.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Resolvers.SelectExpressionResolver.InitType">
            <summary>
            初始化类型
            </summary>
        </member>
        <member name="T:Bing.Ui.Angular.Forms.Resolvers.TextBoxExpressionResolver">
            <summary>
            文本框表达式解析器
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Forms.Resolvers.TextBoxExpressionResolver._expression">
            <summary>
            属性表达式
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Forms.Resolvers.TextBoxExpressionResolver._config">
            <summary>
            配置
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Forms.Resolvers.TextBoxExpressionResolver._memberInfo">
            <summary>
            成员
            </summary>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Resolvers.TextBoxExpressionResolver.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression,Bing.Ui.Angular.Forms.Configs.TextBoxConfig)">
            <summary>
            初始化一个<see cref="T:Bing.Ui.Angular.Forms.Resolvers.TextBoxExpressionResolver"/>类型的实例
            </summary>
            <param name="expression">属性表达式</param>
            <param name="config">配置</param>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Resolvers.TextBoxExpressionResolver.Init(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression,Bing.Ui.Angular.Forms.Configs.TextBoxConfig)">
            <summary>
            初始化
            </summary>
            <param name="expression">属性表达式</param>
            <param name="config">配置</param>
        </member>
        <member name="M:Bing.Ui.Angular.Forms.Resolvers.TextBoxExpressionResolver.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:Bing.Ui.Angular.Internal.Helper">
            <summary>
            辅助操作
            </summary>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.Init``2(Bing.Ui.Configs.IConfig,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Reflection.MemberInfo)">
            <summary>
            初始化基础配置
            </summary>
            <typeparam name="TModel">模型类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="config">配置</param>
            <param name="expression">属性表达式</param>
            <param name="member">成员</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.Init(Bing.Ui.Configs.IConfig,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression,System.Reflection.MemberInfo)">
            <summary>
            初始化基础配置
            </summary>
            <param name="config">配置</param>
            <param name="expression">属性表达式</param>
            <param name="member">成员</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.Init(Bing.Ui.Configs.IConfig,System.Type,System.Reflection.MemberInfo,System.String)">
            <summary>
            初始化基础配置
            </summary>
            <param name="config">配置</param>
            <param name="modelType">模型类型</param>
            <param name="member">成员</param>
            <param name="propertyName">属性名</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.InitModel(Bing.Ui.Configs.IConfig,System.Type,System.Reflection.MemberInfo,System.String)">
            <summary>
            初始化模型绑定
            </summary>
            <param name="config">配置</param>
            <param name="modelType">模型类型</param>
            <param name="member">成员</param>
            <param name="propertyName">属性名</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.GetModel(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression,System.Reflection.MemberInfo)">
            <summary>
            获取模型绑定
            </summary>
            <param name="expression">属性表达式</param>
            <param name="member">成员</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.GetModel(System.String,System.String)">
            <summary>
            获取模型绑定
            </summary>
            <param name="modelName">模型名称</param>
            <param name="propertyName">属性名</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.GetFirstLowerCasePropertyName(System.String)">
            <summary>
            获取首字母小写的属性名
            </summary>
            <param name="propertyName">属性名</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.GetModelName(System.Type)">
            <summary>
            获取模型名称
            </summary>
            <param name="modelType">模型类型</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.GetPropertyName(System.Reflection.MemberInfo,System.String)">
            <summary>
            获取属性名称
            </summary>
            <param name="member">成员</param>
            <param name="propertyName">属性名</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.InitRequired(Bing.Ui.Configs.IConfig,System.Reflection.MemberInfo)">
            <summary>
            初始化必填项验证
            </summary>
            <param name="config">配置</param>
            <param name="member">成员</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.InitDataType(Bing.Ui.Angular.Forms.Configs.TextBoxConfig,System.Reflection.MemberInfo)">
            <summary>
            初始化数据类型
            </summary>
            <param name="config">配置</param>
            <param name="member">成员</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.InitDataType(Bing.Ui.Angular.Forms.Configs.TextBoxConfig,System.ComponentModel.DataAnnotations.DataTypeAttribute)">
            <summary>
            初始化数据类型
            </summary>
            <param name="config">配置</param>
            <param name="attribute">数据类型</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.InitValidation(Bing.Ui.Angular.Forms.Configs.TextBoxConfig,System.Reflection.MemberInfo)">
            <summary>
            初始化验证
            </summary>
            <param name="config">配置</param>
            <param name="member">成员</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.InitEmail(Bing.Ui.Angular.Forms.Configs.TextBoxConfig,System.Reflection.MemberInfo)">
            <summary>
            初始化电子邮件验证
            </summary>
            <param name="config">配置</param>
            <param name="member">成员</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.InitRegex(Bing.Ui.Angular.Forms.Configs.TextBoxConfig,System.Reflection.MemberInfo)">
            <summary>
            初始化正则表达式验证
            </summary>
            <param name="config">配置</param>
            <param name="member">成员</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.InitRegex(Bing.Ui.Angular.Forms.Configs.TextBoxConfig,System.String,System.String)">
            <summary>
            初始化正则表达式验证
            </summary>
            <param name="config">配置</param>
            <param name="pattern">正则表达式</param>
            <param name="errorMessage">错误消息</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.InitLength(Bing.Ui.Angular.Forms.Configs.TextBoxConfig,System.Reflection.MemberInfo)">
            <summary>
            初始化字符串长度验证
            </summary>
            <param name="config">配置</param>
            <param name="member">成员</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.InitStringLength(Bing.Ui.Angular.Forms.Configs.TextBoxConfig,System.Reflection.MemberInfo)">
            <summary>
            初始化字符串长度验证
            </summary>
            <param name="config">配置</param>
            <param name="member">成员</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.InitMinLength(Bing.Ui.Angular.Forms.Configs.TextBoxConfig,System.Reflection.MemberInfo)">
            <summary>
            初始化字符串最小长度验证
            </summary>
            <param name="config">配置</param>
            <param name="member">成员</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.InitMaxLength(Bing.Ui.Angular.Forms.Configs.TextBoxConfig,System.Reflection.MemberInfo)">
            <summary>
            初始化字符串最大长度验证
            </summary>
            <param name="config">配置</param>
            <param name="member">成员</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.InitRange(Bing.Ui.Angular.Forms.Configs.TextBoxConfig,System.Reflection.MemberInfo)">
            <summary>
            初始化数值范围验证
            </summary>
            <param name="config">配置</param>
            <param name="member">成员</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.InitPhone(Bing.Ui.Angular.Forms.Configs.TextBoxConfig,System.Reflection.MemberInfo)">
            <summary>
            初始化手机号验证
            </summary>
            <param name="config">配置</param>
            <param name="member">成员</param>
        </member>
        <member name="M:Bing.Ui.Angular.Internal.Helper.InitIdCard(Bing.Ui.Angular.Forms.Configs.TextBoxConfig,System.Reflection.MemberInfo)">
            <summary>
            初始化身份证验证
            </summary>
            <param name="config">配置</param>
            <param name="member">成员</param>
        </member>
        <member name="T:Bing.Ui.Angular.Tables.Resolvers.ColumnExpressionResolver">
            <summary>
            表格列表达式解析器
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Tables.Resolvers.ColumnExpressionResolver._expression">
            <summary>
            属性表达式
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Tables.Resolvers.ColumnExpressionResolver._config">
            <summary>
            配置
            </summary>
        </member>
        <member name="F:Bing.Ui.Angular.Tables.Resolvers.ColumnExpressionResolver._memberInfo">
            <summary>
            成员
            </summary>
        </member>
        <member name="M:Bing.Ui.Angular.Tables.Resolvers.ColumnExpressionResolver.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression,Bing.Ui.Configs.IConfig)">
            <summary>
            初始化一个<see cref="T:Bing.Ui.Angular.Tables.Resolvers.ColumnExpressionResolver"/>类型的实例
            </summary>
            <param name="expression">属性表达式</param>
            <param name="config">配置</param>
        </member>
        <member name="M:Bing.Ui.Angular.Tables.Resolvers.ColumnExpressionResolver.Init(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression,Bing.Ui.Configs.IConfig)">
            <summary>
            初始化
            </summary>
            <param name="expression">属性表达式</param>
            <param name="config">配置</param>
        </member>
        <member name="M:Bing.Ui.Angular.Tables.Resolvers.ColumnExpressionResolver.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Bing.Ui.Angular.Tables.Resolvers.ColumnExpressionResolver.InitType">
            <summary>
            初始化类型
            </summary>
        </member>
        <member name="T:Bing.Ui.CkEditor.Builders.CkEditorBuilder">
            <summary>
            CkEditor富文本框编辑器生成器
            </summary>
        </member>
        <member name="M:Bing.Ui.CkEditor.Builders.CkEditorBuilder.#ctor">
            <summary>
            初始化一个<see cref="T:Bing.Ui.CkEditor.Builders.CkEditorBuilder"/>类型的实例
            </summary>
        </member>
        <member name="T:Bing.Ui.CkEditor.Configs.CkEditorConfig">
            <summary>
            CkEditor配置
            </summary>
        </member>
        <member name="P:Bing.Ui.CkEditor.Configs.CkEditorConfig.FileBrowserUploadUrl">
            <summary>
            上传地址
            </summary>
        </member>
        <member name="P:Bing.Ui.CkEditor.Configs.CkEditorConfig.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:Bing.Ui.CkEditor.Configs.CkEditorConfig.AllowedContent">
            <summary>
            允许编辑源码修改内容，不进行过滤
            </summary>
        </member>
        <member name="T:Bing.Ui.CkEditor.Editor">
            <summary>
            富文本框编辑器
            </summary>
        </member>
        <member name="M:Bing.Ui.CkEditor.Editor.GetRender">
            <summary>
            获取渲染器
            </summary>
        </member>
        <member name="T:Bing.Ui.CkEditor.IEditor">
            <summary>
            富文本框编辑器
            </summary>
        </member>
        <member name="T:Bing.Ui.CkEditor.Models.ModelEditor`2">
            <summary>
            模型富文本框编辑器
            </summary>
            <typeparam name="TModel">模型类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
        </member>
        <member name="F:Bing.Ui.CkEditor.Models.ModelEditor`2._expression">
            <summary>
            属性表达式
            </summary>
        </member>
        <member name="F:Bing.Ui.CkEditor.Models.ModelEditor`2._memberInfo">
            <summary>
            成员
            </summary>
        </member>
        <member name="M:Bing.Ui.CkEditor.Models.ModelEditor`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            初始化一个<see cref="T:Bing.Ui.CkEditor.Models.ModelEditor`2"/>类型的实例
            </summary>
            <param name="expression">属性表达式</param>
        </member>
        <member name="M:Bing.Ui.CkEditor.Models.ModelEditor`2.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:Bing.Ui.CkEditor.Renders.EditorRender">
            <summary>
            富文本框编辑器渲染器
            </summary>
        </member>
        <member name="F:Bing.Ui.CkEditor.Renders.EditorRender._config">
            <summary>
            配置
            </summary>
        </member>
        <member name="M:Bing.Ui.CkEditor.Renders.EditorRender.#ctor(Bing.Ui.Configs.IConfig)">
            <summary>
            初始化一个<see cref="T:Bing.Ui.CkEditor.Renders.EditorRender"/>类型的实例
            </summary>
            <param name="config">配置</param>
        </member>
        <member name="M:Bing.Ui.CkEditor.Renders.EditorRender.GetTagBuilder">
            <summary>
            获取标签生成器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bing.Ui.CkEditor.Renders.EditorRender.ResolveExpression">
            <summary>
            解析属性表达式
            </summary>
        </member>
        <member name="M:Bing.Ui.CkEditor.Renders.EditorRender.Config(Bing.Ui.Builders.TagBuilder)">
            <summary>
            配置
            </summary>
            <param name="builder">标签生成器</param>
        </member>
        <member name="M:Bing.Ui.CkEditor.Renders.EditorRender.ConfigName(Bing.Ui.Builders.TagBuilder)">
            <summary>
            配置名称
            </summary>
            <param name="builder">标签生成器</param>
        </member>
        <member name="M:Bing.Ui.CkEditor.Renders.EditorRender.ConfigModel(Bing.Ui.Builders.TagBuilder)">
            <summary>
            配置模型绑定
            </summary>
            <param name="builder">标签生成器</param>
        </member>
        <member name="M:Bing.Ui.CkEditor.Renders.EditorRender.ConfigCkEditor(Bing.Ui.Builders.TagBuilder)">
            <summary>
            配置编辑器
            </summary>
            <param name="builder">标签生成器</param>
        </member>
        <member name="M:Bing.Ui.CkEditor.Renders.EditorRender.GetCkEditorConfig">
            <summary>
            获取CkEditor配置
            </summary>
        </member>
        <member name="T:Bing.Ui.CkEditor.Resolvers.CkEditorExpressionResolver">
            <summary>
            富文本框编辑器表达式解析器
            </summary>
        </member>
        <member name="F:Bing.Ui.CkEditor.Resolvers.CkEditorExpressionResolver._expression">
            <summary>
            属性表达式
            </summary>
        </member>
        <member name="F:Bing.Ui.CkEditor.Resolvers.CkEditorExpressionResolver._config">
            <summary>
            配置
            </summary>
        </member>
        <member name="F:Bing.Ui.CkEditor.Resolvers.CkEditorExpressionResolver._memberInfo">
            <summary>
            成员
            </summary>
        </member>
        <member name="M:Bing.Ui.CkEditor.Resolvers.CkEditorExpressionResolver.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression,Bing.Ui.Configs.IConfig)">
            <summary>
            初始化一个<see cref="T:Bing.Ui.CkEditor.Resolvers.CkEditorExpressionResolver"/>类型的实例
            </summary>
            <param name="expression">属性表达式</param>
            <param name="config">配置</param>
        </member>
        <member name="M:Bing.Ui.CkEditor.Resolvers.CkEditorExpressionResolver.Init(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression,Bing.Ui.Configs.IConfig)">
            <summary>
            初始化
            </summary>
            <param name="expression">属性表达式</param>
            <param name="config">配置</param>
        </member>
        <member name="M:Bing.Ui.CkEditor.Resolvers.CkEditorExpressionResolver.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:Bing.Ui.CkEditor.TagHelpers.EditorTagHelper">
            <summary>
            富文本框编辑器
            </summary>
        </member>
        <member name="P:Bing.Ui.CkEditor.TagHelpers.EditorTagHelper.Name">
            <summary>
            控件的名称
            </summary>
        </member>
        <member name="P:Bing.Ui.CkEditor.TagHelpers.EditorTagHelper.BindName">
            <summary>
            控件的绑定名称 [name]
            </summary>
        </member>
        <member name="P:Bing.Ui.CkEditor.TagHelpers.EditorTagHelper.Model">
            <summary>
            模型绑定
            </summary>
        </member>
        <member name="P:Bing.Ui.CkEditor.TagHelpers.EditorTagHelper.For">
            <summary>
            属性表达式
            </summary>
        </member>
        <member name="P:Bing.Ui.CkEditor.TagHelpers.EditorTagHelper.UploadUrl">
            <summary>
            上传地址
            </summary>
        </member>
        <member name="P:Bing.Ui.CkEditor.TagHelpers.EditorTagHelper.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:Bing.Ui.CkEditor.TagHelpers.EditorTagHelper.DisableFilter">
            <summary>
            禁用过滤
            </summary>
        </member>
        <member name="M:Bing.Ui.CkEditor.TagHelpers.EditorTagHelper.GetRender(Bing.Ui.TagHelpers.Context)">
            <summary>
            获取渲染器
            </summary>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Ui.CkEditor.UploadResult">
            <summary>
            CkEditor上传结果
            </summary>
        </member>
        <member name="M:Bing.Ui.CkEditor.UploadResult.#ctor(System.String,System.String)">
            <summary>
            初始化一个<see cref="T:Bing.Ui.CkEditor.UploadResult"/>类型的实例
            </summary>
            <param name="path">文件路径</param>
            <param name="message">消息</param>
        </member>
        <member name="T:Bing.Ui.Extensions.Extensions">
            <summary>
            Angular 扩展
            </summary>
            <summary>
            CkEditor扩展
            </summary>
        </member>
        <member name="M:Bing.Ui.Extensions.Extensions.Angular``1(``0,Bing.Ui.Configs.IConfig)">
            <summary>
            添加 Angular 指令
            </summary>
            <typeparam name="TBuilder">生成器类型</typeparam>
            <param name="builder">生成器实例</param>
            <param name="config">配置</param>
        </member>
        <member name="M:Bing.Ui.Extensions.Extensions.NgIf``1(``0,Bing.Ui.Configs.IConfig)">
            <summary>
            添加 NgIf 指令
            </summary>
            <typeparam name="TBuilder">生成器类型</typeparam>
            <param name="builder">生成器实例</param>
            <param name="config">配置</param>
        </member>
        <member name="M:Bing.Ui.Extensions.Extensions.NgFor``1(``0,Bing.Ui.Configs.IConfig)">
            <summary>
            添加 NgFor 指令
            </summary>
            <typeparam name="TBuilder">生成器类型</typeparam>
            <param name="builder">生成器实例</param>
            <param name="config">配置</param>
        </member>
        <member name="M:Bing.Ui.Extensions.Extensions.NgClass``1(``0,Bing.Ui.Configs.IConfig)">
            <summary>
            添加 NgClass 指令
            </summary>
            <typeparam name="TBuilder">生成器类型</typeparam>
            <param name="builder">生成器实例</param>
            <param name="config">配置</param>
        </member>
        <member name="M:Bing.Ui.Extensions.Extensions.Link``1(``0,Bing.Ui.Configs.IConfig)">
            <summary>
            添加 路由链接 指令
            </summary>
            <typeparam name="TBuilder">生成器类型</typeparam>
            <param name="builder">生成器实例</param>
            <param name="config">配置</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Ui.Extensions.Extensions.OnClick``1(``0,Bing.Ui.Configs.IConfig)">
            <summary>
            添加 click 指令
            </summary>
            <typeparam name="TBuilder">生成器类型</typeparam>
            <param name="builder">生成器实例</param>
            <param name="config">配置</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Ui.Extensions.Extensions.Upload``1(``0,System.String)">
            <summary>
            上传
            </summary>
            <typeparam name="TComponent">组件类型</typeparam>
            <param name="component">组件实例</param>
            <param name="url">上传地址</param>
        </member>
    </members>
</doc>
