<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bing.EasyCaching</name>
    </assembly>
    <members>
        <member name="T:Bing.EasyCaching.CacheManager">
            <summary>
            EasyCaching缓存管理 - 异步操作
            </summary>
            <summary>
            EasyCaching缓存管理
            </summary>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.ExistsAsync(System.String)">
            <summary>
            是否存在指定键的缓存
            </summary>
            <param name="key">缓存键</param>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.GetAsync``1(System.String,System.Func{System.Threading.Tasks.Task{``0}},System.Nullable{System.TimeSpan})">
            <summary>
            从缓存中获取数据，如果不存在，则执行获取数据操作并添加到缓存中
            </summary>
            <typeparam name="T">缓存数据类型</typeparam>
            <param name="key">缓存键</param>
            <param name="func">获取数据操作</param>
            <param name="expiration">过期时间间隔</param>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.GetAsync(System.String,System.Type)">
            <summary>
            从缓存中获取数据
            </summary>
            <param name="key">缓存键</param>
            <param name="type">缓存数据类型</param>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.GetAsync``1(System.String)">
            <summary>
            从缓存中获取数据
            </summary>
            <typeparam name="T">缓存数据类型</typeparam>
            <param name="key">缓存键</param>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.TryAddAsync``1(System.String,``0,System.Nullable{System.TimeSpan})">
            <summary>
            当缓存数据不存在则添加，已存在不会添加，添加成功返回true
            </summary>
            <typeparam name="T">缓存数据类型</typeparam>
            <param name="key">缓存键</param>
            <param name="value">值</param>
            <param name="expiration">过期时间间隔</param>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.AddAsync``1(System.String,``0,System.Nullable{System.TimeSpan})">
            <summary>
            添加缓存。如果已存在缓存，将覆盖
            </summary>
            <typeparam name="T">缓存数据类型</typeparam>
            <param name="key">缓存键</param>
            <param name="value">值</param>
            <param name="expiration">过期时间间隔</param>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.RemoveAsync(System.String)">
            <summary>
            移除缓存
            </summary>
            <param name="key">缓存键</param>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.RemoveByPrefixAsync(System.String)">
            <summary>
            通过缓存键前缀移除缓存
            </summary>
            <param name="prefix">缓存键前缀</param>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.ClearAsync">
            <summary>
            清空缓存
            </summary>
            <returns></returns>
        </member>
        <member name="F:Bing.EasyCaching.CacheManager._provider">
            <summary>
            EasyCaching缓存提供器
            </summary>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.#ctor(EasyCaching.Core.IEasyCachingProvider)">
            <summary>
            初始化一个<see cref="T:Bing.EasyCaching.CacheManager"/>类型的实例
            </summary>
            <param name="provider">EasyCaching缓存提供器</param>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.Exists(System.String)">
            <summary>
            是否存在指定键的缓存
            </summary>
            <param name="key">缓存键</param>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.Get``1(System.String,System.Func{``0},System.Nullable{System.TimeSpan})">
            <summary>
            从缓存中获取数据，如果不存在，则执行获取数据操作并添加到缓存中
            </summary>
            <typeparam name="T">缓存数据类型</typeparam>
            <param name="key">缓存键</param>
            <param name="func">获取数据操作</param>
            <param name="expiration">过期时间间隔</param>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.Get``1(System.String)">
            <summary>
            从缓存中获取数据
            </summary>
            <typeparam name="T">缓存数据类型</typeparam>
            <param name="key">缓存键</param>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.TryAdd``1(System.String,``0,System.Nullable{System.TimeSpan})">
            <summary>
            当缓存数据不存在则添加，已存在不会添加，添加成功返回true
            </summary>
            <typeparam name="T">缓存数据类型</typeparam>
            <param name="key">缓存键</param>
            <param name="value">值</param>
            <param name="expiration">过期时间间隔</param>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.Add``1(System.String,``0,System.Nullable{System.TimeSpan})">
            <summary>
            添加缓存。如果已存在缓存，将覆盖
            </summary>
            <typeparam name="T">缓存数据类型</typeparam>
            <param name="key">缓存键</param>
            <param name="value">值</param>
            <param name="expiration">过期时间间隔</param>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.Remove(System.String)">
            <summary>
            移除缓存
            </summary>
            <param name="key">缓存键</param>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.RemoveByPrefix(System.String)">
            <summary>
            通过缓存键前缀移除缓存
            </summary>
            <param name="prefix">缓存键前缀</param>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.Clear">
            <summary>
            清空缓存
            </summary>
        </member>
        <member name="M:Bing.EasyCaching.CacheManager.GetExpiration(System.Nullable{System.TimeSpan})">
            <summary>
            获取过期时间间隔
            </summary>
            <param name="expiration">过期时间间隔</param>
        </member>
        <member name="T:Bing.EasyCaching.Extensions">
            <summary>
            EasyCaching缓存扩展
            </summary>
        </member>
        <member name="M:Bing.EasyCaching.Extensions.AddCaching(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{EasyCaching.Core.Configurations.EasyCachingOptions})">
            <summary>
            注册EasyCaching缓存操作
            </summary>
            <param name="services">服务集合</param>
            <param name="configAction">配置操作</param>
            <returns></returns>
        </member>
    </members>
</doc>
