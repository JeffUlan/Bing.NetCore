<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bing.Offices.Npoi</name>
    </assembly>
    <members>
        <member name="T:Bing.Offices.Npoi.Excels.Core.NpoiCell">
            <summary>
            基于NPOI的单元格
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Excels.Core.NpoiCell._cell">
            <summary>
            单元格
            </summary>
        </member>
        <member name="P:Bing.Offices.Npoi.Excels.Core.NpoiCell.Bold">
            <summary>
            加粗。将文字加粗
            </summary>
        </member>
        <member name="P:Bing.Offices.Npoi.Excels.Core.NpoiCell.Italic">
            <summary>
            倾斜。将文字变为斜体
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiCell.#ctor(NPOI.SS.UserModel.ICell)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Npoi.Excels.Core.NpoiCell"/>类型的实例
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiCell.GetValue">
            <summary>
            获取单元格的值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiCell.SetValue(System.String)">
            <summary>
            设置单元格的值
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiCell.SetFormula(System.String)">
            <summary>
            设置单元格的计算公式
            </summary>
            <param name="formula">计算公式</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiCell.SetFontStyle(System.Drawing.Font)">
            <summary>
            设置字体样式
            </summary>
            <param name="font">字体</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiCell.SetBackgroundColor(System.Drawing.Color)">
            <summary>
            设置背景颜色
            </summary>
            <param name="color">颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiCell.SetFontColor(System.Drawing.Color)">
            <summary>
            设置字体颜色
            </summary>
            <param name="color">颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiCell.IsMerged">
            <summary>
            是否合并单元格
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Npoi.Excels.Core.NpoiColumn">
            <summary>
            基于NPOI的单元列
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Excels.Core.NpoiColumn._sheet">
            <summary>
            工作表
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Excels.Core.NpoiColumn._columnIndex">
            <summary>
            列索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Npoi.Excels.Core.NpoiColumn.Bold">
            <summary>
            加粗。将文字加粗
            </summary>
        </member>
        <member name="P:Bing.Offices.Npoi.Excels.Core.NpoiColumn.Italic">
            <summary>
            倾斜。将文字变为斜体
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiColumn.#ctor(NPOI.SS.UserModel.ISheet,System.Int32)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Npoi.Excels.Core.NpoiColumn"/>类型的实例
            </summary>
            <param name="sheet">工作表</param>
            <param name="columnIndex">列索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiColumn.SetFontStyle(System.Drawing.Font)">
            <summary>
            设置字体样式
            </summary>
            <param name="font">字体</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiColumn.SetBackgroundColor(System.Drawing.Color)">
            <summary>
            设置背景颜色
            </summary>
            <param name="color">颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiColumn.SetFontColor(System.Drawing.Color)">
            <summary>
            设置字体颜色
            </summary>
            <param name="color">颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiColumn.SetWidth(System.Int32)">
            <summary>
            设置宽度
            </summary>
            <param name="width">宽度</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiColumn.GetCell(System.Int32)">
            <summary>
            获取单元格
            </summary>
            <param name="rowIndex">行索引</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Npoi.Excels.Core.NpoiRange">
            <summary>
            基于NPOI的行列范围
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Excels.Core.NpoiRange._sheet">
            <summary>
            工作表
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Excels.Core.NpoiRange._rangeAddress">
            <summary>
            行列范围地址
            </summary>
        </member>
        <member name="P:Bing.Offices.Npoi.Excels.Core.NpoiRange.Bold">
            <summary>
            加粗。将文字加粗
            </summary>
        </member>
        <member name="P:Bing.Offices.Npoi.Excels.Core.NpoiRange.Italic">
            <summary>
            倾斜。将文字变为斜体
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiRange.#ctor(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Npoi.Excels.Core.NpoiRange"/>类型的实例
            </summary>
            <param name="sheet">工作表</param>
            <param name="startRowIndex">起始行索引</param>
            <param name="startColumnIndex">起始列索引</param>
            <param name="endRowIndex">结束行索引</param>
            <param name="endColumnIndex">结束列索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiRange.SetFontStyle(System.Drawing.Font)">
            <summary>
            设置字体样式
            </summary>
            <param name="font">字体</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiRange.SetBackgroundColor(System.Drawing.Color)">
            <summary>
            设置背景颜色
            </summary>
            <param name="color">颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiRange.SetFontColor(System.Drawing.Color)">
            <summary>
            设置字体颜色
            </summary>
            <param name="color">颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiRange.Merge">
            <summary>
            合并单元格
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiRange.UnMerge">
            <summary>
            取消单元格合并
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiRange.GetRangeData">
            <summary>
            获取行列范围数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Npoi.Excels.Core.NpoiRow">
            <summary>
            基于NPOI的单元行
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Excels.Core.NpoiRow._row">
            <summary>
            单元行
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Excels.Core.NpoiRow._rowIndex">
            <summary>
            行索引
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Excels.Core.NpoiRow._sheet">
            <summary>
            工作表
            </summary>
        </member>
        <member name="P:Bing.Offices.Npoi.Excels.Core.NpoiRow.Bold">
            <summary>
            加粗。将文字加粗
            </summary>
        </member>
        <member name="P:Bing.Offices.Npoi.Excels.Core.NpoiRow.Italic">
            <summary>
            倾斜。将文字变为斜体
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiRow.#ctor(NPOI.SS.UserModel.ISheet,System.Int32)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Npoi.Excels.Core.NpoiRow"/>类型的实例
            </summary>
            <param name="sheet">工作表</param>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiRow.SetFontStyle(System.Drawing.Font)">
            <summary>
            设置字体样式
            </summary>
            <param name="font">字体</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiRow.SetBackgroundColor(System.Drawing.Color)">
            <summary>
            设置背景颜色
            </summary>
            <param name="color">颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiRow.SetFontColor(System.Drawing.Color)">
            <summary>
            设置字体颜色
            </summary>
            <param name="color">颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiRow.SetHeight(System.Int32)">
            <summary>
            设置高度
            </summary>
            <param name="height">高度</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiRow.GetCell(System.Int32)">
            <summary>
            获取单元格
            </summary>
            <param name="columnIndex">列索引</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Npoi.Excels.Core.NpoiWorkbook">
            <summary>
            基于NPOI的工作簿
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Excels.Core.NpoiWorkbook._workbook">
            <summary>
            工作簿
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkbook.#ctor(Bing.Offices.Excels.Enums.ExcelFormat)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Npoi.Excels.Core.NpoiWorkbook"/>类型的实例
            </summary>
            <param name="format">Excel格式类型</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkbook.#ctor(System.String)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Npoi.Excels.Core.NpoiWorkbook"/>类型的实例
            </summary>
            <param name="fileName">文件名称，绝对路径</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkbook.CreateWorkbook(Bing.Offices.Excels.Enums.ExcelFormat)">
            <summary>
            创建工作簿
            </summary>
            <param name="format">Excel格式类型</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkbook.LoadWorkbook(System.String)">
            <summary>
            加载工作簿
            </summary>
            <param name="fileName">文件名称，绝对路径</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkbook.Save(System.String)">
            <summary>
            保存
            </summary>
            <param name="fileName">文件名</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkbook.GetSheet(System.String)">
            <summary>
            获取工作表
            </summary>
            <param name="sheetName">工作表名称</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkbook.InsertSheet(System.String)">
            <summary>
            插入工作表
            </summary>
            <param name="sheetName">工作表名称</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkbook.InsertSheet(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            插入工作表
            </summary>
            <param name="table">数据表</param>
            <param name="sheetName">工作表名称</param>
            <param name="withHeader">是否包含表头</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkbook.CloneSheet(System.Int32)">
            <summary>
            复制工作表，根据工作表索引
            </summary>
            <param name="sheetIndex">工作表索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkbook.CloneSheet(System.String)">
            <summary>
            复制工作表，根据工作表名称
            </summary>
            <param name="sheetName">工作表名称</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet">
            <summary>
            基于NPOI的工作表
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet._sheet">
            <summary>
            工作表
            </summary>
        </member>
        <member name="P:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.ColumnNum">
            <summary>
            列数
            </summary>
        </member>
        <member name="P:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.RowNum">
            <summary>
            行数
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.#ctor(NPOI.SS.UserModel.ISheet)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet"/>类型的实例
            </summary>
            <param name="sheet">工作表</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.GetCellValue(System.Int32,System.Int32)">
            <summary>
            获取单元格值
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="columnIndex">列索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.GetTableContent(System.Boolean)">
            <summary>
            获取数据表内容
            </summary>
            <param name="hasHeader">是否包含表头，默认:false</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.GetRange(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取行列范围
            </summary>
            <param name="startRowIndex">起始行索引</param>
            <param name="startColumnIndex">起始列索引</param>
            <param name="endRowIndex">结束行索引</param>
            <param name="endColumnIndex">结束列索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.GetCell(System.Int32,System.Int32)">
            <summary>
            获取单元格
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="columnIndex">列索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.GetCellFormula(System.Int32,System.Int32)">
            <summary>
            获取单元格的计算公式
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="columnIndex">列索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.GetRow(System.Int32)">
            <summary>
            获取单元行
            </summary>
            <param name="rowIndex">行索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.GetColumn(System.Int32)">
            <summary>
            获取单元列
            </summary>
            <param name="columnIndex">列索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.InsertRow(System.Int32)">
            <summary>
            插入单元行
            </summary>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.InsertColumn(System.Int32)">
            <summary>
            插入单元列
            </summary>
            <param name="columnIndex">列索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.SetCellValue(System.String,System.Int32,System.Int32)">
            <summary>
            设置单元格的值
            </summary>
            <param name="value">值</param>
            <param name="rowIndex">行索引</param>
            <param name="columnIndex">列索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.SetCellFormula(System.String,System.Int32,System.Int32)">
            <summary>
            设置单元格的计算公式
            </summary>
            <param name="formula">计算公式</param>
            <param name="rowIndex">行索引</param>
            <param name="columnIndex">列索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.SetRangeColor(Bing.Offices.Excels.Abstractions.IRange,System.Drawing.Color)">
            <summary>
            设置指定行列范围颜色
            </summary>
            <param name="range">行列范围</param>
            <param name="color">颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.SetCellColor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            设置单元格颜色
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="columnIndex">列索引</param>
            <param name="color">颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.MergeCell(Bing.Offices.Excels.Abstractions.IRange)">
            <summary>
            合并单元格
            </summary>
            <param name="range">行列范围</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.MergeCell(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            合并单元格
            </summary>
            <param name="startRowIndex">起始行索引</param>
            <param name="startColumnIndex">起始列索引</param>
            <param name="endRowIndex">结束行索引</param>
            <param name="endColumnIndex">结束列索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.GetDataFromRow(System.Int32)">
            <summary>
            从单元行中获取数据。横向所有数据
            </summary>
            <param name="rowIndex">行索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Core.NpoiWorkSheet.GetDataFromColumn(System.Int32)">
            <summary>
            从单元列中获取数据。纵向所有数据
            </summary>
            <param name="columnIndex">列索引</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Npoi.Excels.Exports.Styler.ExcelExportStylerBase">
            <summary>
            Excel导出样式器基类
            </summary>
        </member>
        <member name="P:Bing.Offices.Npoi.Excels.Exports.Styler.ExcelExportStylerBase.StringNoneStyle">
            <summary>
            字符串单行样式
            </summary>
        </member>
        <member name="P:Bing.Offices.Npoi.Excels.Exports.Styler.ExcelExportStylerBase.StringNoneWrapStyle">
            <summary>
            字符串单行换行样式
            </summary>
        </member>
        <member name="P:Bing.Offices.Npoi.Excels.Exports.Styler.ExcelExportStylerBase.StringSeptailStyle">
            <summary>
            字符串间隔行样式
            </summary>
        </member>
        <member name="P:Bing.Offices.Npoi.Excels.Exports.Styler.ExcelExportStylerBase.StringSeptailWrapStyle">
            <summary>
            字符串间隔行换行样式
            </summary>
        </member>
        <member name="P:Bing.Offices.Npoi.Excels.Exports.Styler.ExcelExportStylerBase.Workbook">
            <summary>
            工作簿
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Excels.Exports.Styler.ExcelExportStylerBase.StringFormat">
            <summary>
            字符串格式化
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Exports.Styler.ExcelExportStylerBase.CreateStyles(NPOI.SS.UserModel.IWorkbook)">
            <summary>
            创建样式
            </summary>
            <param name="workbook">工作簿</param>
        </member>
        <member name="T:Bing.Offices.Npoi.Excels.Exports.Styler.IExcelExportStyler">
            <summary>
            Excel 导出样式器
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Exports.Styler.IExcelExportStyler.GetHeaderStyle(System.Int16)">
            <summary>
            获取列表头样式
            </summary>
            <param name="color">颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Exports.Styler.IExcelExportStyler.GetTitleStyle(System.Int16)">
            <summary>
            获取标题样式
            </summary>
            <param name="color">颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Exports.Styler.IExcelExportStyler.GetStyles(System.Boolean,Bing.Offices.Excels.Models.Parameters.ExcelExportEntity)">
            <summary>
            获取样式
            </summary>
            <param name="parity"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Excels.Exports.Styler.IExcelExportStyler.GetStyles(NPOI.SS.UserModel.ICell,System.Int32,Bing.Offices.Excels.Models.Parameters.ExcelExportEntity,System.Object,System.Object)">
            <summary>
            获取样式
            </summary>
            <param name="cell">单元格</param>
            <param name="dataRow">数据行</param>
            <param name="entity"></param>
            <param name="obj">对象</param>
            <param name="data">数据</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Npoi.Extensions.CellExtensions">
            <summary>
            单元格(<see cref="T:NPOI.SS.UserModel.ICell"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellExtensions.GetCellValue(NPOI.SS.UserModel.ICell)">
            <summary>
            获取单元格的值
            </summary>
            <param name="cell">单元格</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellExtensions.SetValue(NPOI.SS.UserModel.ICell,System.Object)">
            <summary>
            设置单元格值
            </summary>
            <param name="cell">单元格</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellExtensions.GetSpan(NPOI.SS.UserModel.ICell)">
            <summary>
            获取单元格跨度信息
            </summary>
            <param name="cell">单元格</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellExtensions.AddConditionalFormattingRules(NPOI.SS.UserModel.ICell,NPOI.SS.UserModel.IConditionalFormattingRule[])">
            <summary>
            添加条件格式规则
            </summary>
            <param name="cell">单元格</param>
            <param name="cfrs">条件格式规则</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellExtensions.GetConditionalFormattingRules(NPOI.SS.UserModel.ICell)">
            <summary>
            获取条件格式规则
            </summary>
            <param name="cell">单元格</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellExtensions.ExistConditionalFormatting(NPOI.SS.UserModel.ICell,NPOI.SS.UserModel.IConditionalFormatting)">
            <summary>
            判断单元格是否存在条件格式
            </summary>
            <param name="cell">单元格</param>
            <param name="cf">条件格式</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Npoi.Extensions.CellStyleExtensions">
            <summary>
            单元格样式(<see cref="T:NPOI.SS.UserModel.ICellStyle"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetDataFormat(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置数据格式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="dataFormat">数据格式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetHorizontalAlignment(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.HorizontalAlignment)">
            <summary>
            设置水平对齐
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="horizontalAlignment">水平对齐</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetVerticalAlignment(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.VerticalAlignment)">
            <summary>
            设置垂直对齐
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="verticalAlignment">垂直对齐</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetFillForegroundColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置填充前景颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="fillForegroundColor">填充前景颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetFillBackgroundColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置填充背景颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="backgroundColor">填充背景颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetFillPattern(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.FillPattern)">
            <summary>
            设置填充模式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="fillPattern">填充图案</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderTop(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.BorderStyle)">
            <summary>
            设置上边框样式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderStyle">边框样式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderRight(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.BorderStyle)">
            <summary>
            设置右边框样式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderStyle">边框样式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderBottom(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.BorderStyle)">
            <summary>
            设置下边框样式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderStyle">边框样式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderLeft(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.BorderStyle)">
            <summary>
            设置左边框样式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderStyle">边框样式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorder(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.BorderStyle)">
            <summary>
            设置边框样式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderStyle">边框样式</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderTopColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置上边框颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderColor">边框颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderRightColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置右边框颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderColor">边框颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderBottomColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置下边框颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderColor">边框颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderLeftColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置左边框颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderColor">边框颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置边框颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderColor">边框颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetFont(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.IWorkbook,System.Action{NPOI.SS.UserModel.IFont})">
            <summary>
            设置字体
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="workbook">工作簿</param>
            <param name="action">字体</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Npoi.Extensions.FontExtensions">
            <summary>
            字体(<see cref="T:NPOI.SS.UserModel.IFont"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.FontExtensions.SetFontHeightInPoints(NPOI.SS.UserModel.IFont,System.Int16)">
            <summary>
            设置字体大小
            </summary>
            <param name="font">字体</param>
            <param name="fontSize">字体大小</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.FontExtensions.SetColor(NPOI.SS.UserModel.IFont,System.Int16)">
            <summary>
            设置字体颜色
            </summary>
            <param name="font">字体</param>
            <param name="color">颜色</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.FontExtensions.SetBoldweight(NPOI.SS.UserModel.IFont,System.Int16)">
            <summary>
            设置粗体
            </summary>
            <param name="font">字体</param>
            <param name="boldweight">粗体大小</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Npoi.Extensions.RowExtensions">
            <summary>
            行(<see cref="T:NPOI.SS.UserModel.IRow"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.RowExtensions.GetOrCreateCell(NPOI.SS.UserModel.IRow,System.Int32)">
            <summary>
            获取或创建单元格
            </summary>
            <param name="row">行</param>
            <param name="cellIndex">单元格索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.RowExtensions.CreateCell(NPOI.SS.UserModel.IRow,System.Int32,System.Action{NPOI.SS.UserModel.ICell})">
            <summary>
            创建单元格并进行操作
            </summary>
            <param name="row">行</param>
            <param name="cellIndex">单元格索引</param>
            <param name="action">单元格操作</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.RowExtensions.ClearContent(NPOI.SS.UserModel.IRow)">
            <summary>
            清空内容
            </summary>
            <param name="row">行</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Npoi.Extensions.SheetExtensions">
            <summary>
            工作表(<see cref="T:NPOI.SS.UserModel.ISheet"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.GetCellValue(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            获取单元格的值
            </summary>
            <param name="sheet">工作表</param>
            <param name="rowIndex">行索引</param>
            <param name="columnIndex">列索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.GetMergedRegionValue(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            获取合并单元格的值
            </summary>
            <param name="sheet">工作表</param>
            <param name="rowIndex">行索引</param>
            <param name="columnIndex">列索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.IsMergedRegion(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            判断指定的单元格是否是合并单元格
            </summary>
            <param name="sheet">工作表</param>
            <param name="rowIndex">行索引</param>
            <param name="columnIndex">列索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.DeleteColumn(NPOI.SS.UserModel.ISheet,System.Int32)">
            <summary>
            删除工作表中指定列，并移动右侧列到左侧列
            </summary>
            <param name="sheet">工作表</param>
            <param name="columnIndex">列索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.CloneCell(NPOI.SS.UserModel.ICell,NPOI.SS.UserModel.ICell)">
            <summary>
            克隆单元格
            </summary>
            <param name="oldCell">旧单元格</param>
            <param name="newCell">新单元格</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.MergedCell(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            合并单元格
            </summary>
            <param name="sheet">工作表</param>
            <param name="firstRow">起始行索引</param>
            <param name="lastRow">结束行索引</param>
            <param name="firstColumn">起始列索引</param>
            <param name="lastColumn">结束列索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.GetOrCreateRow(NPOI.SS.UserModel.ISheet,System.Int32)">
            <summary>
            获取或创建行
            </summary>
            <param name="sheet">工作表</param>
            <param name="rowIndex">行索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.CreateRow(NPOI.SS.UserModel.ISheet,System.Int32,System.Action{NPOI.SS.UserModel.IRow})">
            <summary>
            创建行并进行操作
            </summary>
            <param name="sheet">工作表</param>
            <param name="rowIndex">行索引</param>
            <param name="action">行操作</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.InsertRow(NPOI.SS.UserModel.ISheet,System.Int32)">
            <summary>
            插入行
            </summary>
            <param name="sheet">工作表</param>
            <param name="rowIndex">行索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.InsertRows(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            插入行
            </summary>
            <param name="sheet">工作表</param>
            <param name="rowIndex">行索引</param>
            <param name="rowsCount">行数</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.RemoveRow(NPOI.SS.UserModel.ISheet,System.Int32)">
            <summary>
            删除行
            </summary>
            <param name="sheet">工作表</param>
            <param name="rowIndex">行索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.RemoveRows(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            删除行
            </summary>
            <param name="sheet">工作表</param>
            <param name="startRowIndex">起始行索引</param>
            <param name="endRowIndex">结束行索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.CopyRow(NPOI.SS.UserModel.ISheet,System.Int32)">
            <summary>
            复制行
            </summary>
            <param name="sheet">工作表</param>
            <param name="rowIndex">行索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.CopyRows(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            复制行
            </summary>
            <param name="sheet">工作表</param>
            <param name="startRowIndex">起始行索引</param>
            <param name="endRowIndex">结束行索引</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.AddMergedRegion(NPOI.SS.UserModel.ISheet,Bing.Offices.Core.MergedRegionInfo)">
            <summary>
            添加合并区域
            </summary>
            <param name="sheet">工作表</param>
            <param name="regionInfo">合并区域信息</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.GetMergedRegionInfos(NPOI.SS.UserModel.ISheet)">
            <summary>
            获取所有合并区域信息的列表
            </summary>
            <param name="sheet">工作表</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.GetMergedRegionInfos(NPOI.SS.UserModel.ISheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            获取指定区域包含合并区域信息的列表
            </summary>
            <param name="sheet">工作表</param>
            <param name="firstRow">起始行</param>
            <param name="lastRow">结束行</param>
            <param name="firstColumn">起始列</param>
            <param name="lastColumn">结束列</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.RemoveMergedRegions(NPOI.SS.UserModel.ISheet)">
            <summary>
            删除所有合并区域
            </summary>
            <param name="sheet">工作表</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.RemoveMergedRegions(NPOI.SS.UserModel.ISheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            删除指定区域内的合并区域
            </summary>
            <param name="sheet">工作表</param>
            <param name="firstRow">起始行</param>
            <param name="lastRow">结束行</param>
            <param name="firstColumn">起始列</param>
            <param name="lastColumn">结束列</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.MoveMergedRegions(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            移动所有合并区域
            </summary>
            <param name="sheet">工作表</param>
            <param name="moveRowCount">移动总行数</param>
            <param name="moveColumnCount">移动总列数</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.MoveMergedRegions(NPOI.SS.UserModel.ISheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            移动指定区域内的合并区域
            </summary>
            <param name="sheet">工作表</param>
            <param name="firstRow">起始行</param>
            <param name="lastRow">结束行</param>
            <param name="firstColumn">起始列</param>
            <param name="lastColumn">结束列</param>
            <param name="moveRowCount">移动总行数</param>
            <param name="moveColumnCount">移动总列数</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.AddPicture(NPOI.SS.UserModel.ISheet,Bing.Offices.Core.PictureInfo)">
            <summary>
            添加图片
            </summary>
            <param name="sheet">工作表</param>
            <param name="pictureInfo">图片信息</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.GetAllPictureInfos(NPOI.SS.UserModel.ISheet)">
            <summary>
            获取所有包含图片信息的列表
            </summary>
            <param name="sheet">工作表</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.GetAllPictureInfos(NPOI.SS.UserModel.ISheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            获取指定区域包含图片信息的列表
            </summary>
            <param name="sheet">工作表</param>
            <param name="firstRow">起始行索引</param>
            <param name="lastRow">结束行索引</param>
            <param name="firstColumn">起始列索引</param>
            <param name="lastColumn">结束列索引</param>
            <param name="onlyInternal">是否内部区域</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.GetAllPictureInfos(NPOI.HSSF.UserModel.HSSFSheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            获取指定区域包含图片信息的列表
            </summary>
            <param name="sheet">工作表</param>
            <param name="firstRow">起始行索引</param>
            <param name="lastRow">结束行索引</param>
            <param name="firstColumn">起始列索引</param>
            <param name="lastColumn">结束列索引</param>
            <param name="onlyInternal">是否内部区域</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.GetAllPictureInfos(NPOI.XSSF.UserModel.XSSFSheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            获取指定区域包含图片信息的列表
            </summary>
            <param name="sheet">工作表</param>
            <param name="firstRow">起始行索引</param>
            <param name="lastRow">结束行索引</param>
            <param name="firstColumn">起始列索引</param>
            <param name="lastColumn">结束列索引</param>
            <param name="onlyInternal">是否内部区域</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.RemovePictures(NPOI.SS.UserModel.ISheet)">
            <summary>
            删除所有图片
            </summary>
            <param name="sheet">工作表</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.RemovePictures(NPOI.SS.UserModel.ISheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            删除指定区域的图片
            </summary>
            <param name="sheet">工作表</param>
            <param name="firstRow">起始行索引</param>
            <param name="lastRow">结束行索引</param>
            <param name="firstColumn">起始列索引</param>
            <param name="lastColumn">结束列索引</param>
            <param name="onlyInternal">是否内部区域</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.RemovePictures(NPOI.HSSF.UserModel.HSSFSheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            删除指定区域的图片
            </summary>
            <param name="sheet">工作表</param>
            <param name="firstRow">起始行索引</param>
            <param name="lastRow">结束行索引</param>
            <param name="firstColumn">起始列索引</param>
            <param name="lastColumn">结束列索引</param>
            <param name="onlyInternal">是否内部区域</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.RemovePictures(NPOI.XSSF.UserModel.XSSFSheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            删除指定区域的图片
            </summary>
            <param name="sheet">工作表</param>
            <param name="firstRow">起始行索引</param>
            <param name="lastRow">结束行索引</param>
            <param name="firstColumn">起始列索引</param>
            <param name="lastColumn">结束列索引</param>
            <param name="onlyInternal">是否内部区域</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.MovePictures(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            移动所有图片
            </summary>
            <param name="sheet">工作表</param>
            <param name="moveRowCount">移动行总数</param>
            <param name="moveColumnCount">移动列总数</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.MovePictures(NPOI.SS.UserModel.ISheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Int32,System.Int32)">
            <summary>
            移动指定区域的所有图片
            </summary>
            <param name="sheet">工作表</param>
            <param name="firstRow">起始行索引</param>
            <param name="lastRow">结束行索引</param>
            <param name="firstColumn">起始列索引</param>
            <param name="lastColumn">结束列索引</param>
            <param name="onlyInternal">是否内部区域</param>
            <param name="moveRowCount">移动行总数</param>
            <param name="moveColumnCount">移动列总数</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.IsInternalOrIntersect(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            判断区域内部或交叉
            </summary>
            <param name="rangeFirstRow">区域起始行</param>
            <param name="rangeLastRow">区域结束行</param>
            <param name="rangeFirstColumn">区域起始列</param>
            <param name="rangeLastColumn">区域结束列</param>
            <param name="pictureFirstRow">图片起始行</param>
            <param name="pictureLastRow">图片结束行</param>
            <param name="pictureFirstColumn">图片起始列</param>
            <param name="pictureLastColumn">图片结束列</param>
            <param name="onlyInternal">是否内部区域</param>
            <returns></returns>
        </member>
        <member name="T:Bing.Offices.Npoi.Extensions.WorkbookExtensions">
            <summary>
            工作簿<see cref="T:NPOI.SS.UserModel.IWorkbook"/> 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.WorkbookExtensions.GetExcelFormat(NPOI.SS.UserModel.IWorkbook)">
            <summary>
            获取Excel格式类型
            </summary>
            <param name="workbook">工作簿</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.WorkbookExtensions.GetSheets(NPOI.SS.UserModel.IWorkbook)">
            <summary>
            获取工作表集合
            </summary>
            <param name="workbook">工作簿</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.WorkbookExtensions.GetOrCreateSheet(NPOI.SS.UserModel.IWorkbook,System.String)">
            <summary>
            获取或创建工作表
            </summary>
            <param name="workbook">工作簿</param>
            <param name="name">工作表名</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.WorkbookExtensions.CreateSheet(NPOI.SS.UserModel.IWorkbook,System.String,System.Action{NPOI.SS.UserModel.ISheet})">
            <summary>
            创建工作表并进行操作
            </summary>
            <param name="workbook">工作簿</param>
            <param name="name">工作表名</param>
            <param name="action">工作表操作</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.WorkbookExtensions.GetOrCreateSheet(NPOI.SS.UserModel.IWorkbook)">
            <summary>
            获取或创建工作表
            </summary>
            <param name="workbook">工作簿</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.WorkbookExtensions.CreateSheet(NPOI.SS.UserModel.IWorkbook,System.Action{NPOI.SS.UserModel.ISheet})">
            <summary>
            创建工作表并进行操作
            </summary>
            <param name="workbook">工作簿</param>
            <param name="action">工作表操作</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.WorkbookExtensions.SaveToBuffer(NPOI.SS.UserModel.IWorkbook)">
            <summary>
            将工作簿转换成二进制文件流
            </summary>
            <param name="workbook">工作簿</param>
            <returns></returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.WorkbookExtensions.GetXlsColour(NPOI.HSSF.UserModel.HSSFWorkbook,System.Drawing.Color)">
            <summary>
            获取Xls颜色
            </summary>
            <param name="workbook">工作簿</param>
            <param name="color">系统颜色</param>
            <returns></returns>
        </member>
    </members>
</doc>
